apply plugin: 'android'

configurations{
    providedlibs
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':mplug_proj:plug_common')
    compile project(':SmartHome:plug_lib')
//    providedlibs files('libs_ex/plug_lib.jar')
    providedlibs files('libs_ex/android-support-v13.jar')
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"
    applicationVariants.all {
        variant -> variant.javaCompile.classpath += configurations.providedlibs
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    
    signingConfigs {
        debug {
            storeFile file('./keystore/mihome-demo.keystore')
            storePassword 'mihome'
            keyAlias 'mihome-demo-key'
            keyPassword 'mihome'
        }
        release {
            storeFile file('./keystore/mihome-demo.keystore')
            storePassword 'mihome'
            keyAlias 'mihome-demo-key'
            keyPassword 'mihome'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
}
